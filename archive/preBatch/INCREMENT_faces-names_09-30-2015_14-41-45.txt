./incDriver.py data/faces-names.csv -k 20 -I -C -T -v 1


Using: data/faces-names.csv (624)  --  (0.762778 s)
Initial Clustering: kmeans
Initial:  --  (1.756421 s)
Accuracy: 396 of 624: 63.462 %
H: 0.728944 C: 0.756066 V: 0.742257 JCC: 0.343734

Rows are labels, Columns are Clusters

      0   1   2   3   4   5   6  7   8   9  10  11  12  13  14  15  16  17  18  19
   0  2   0   0  28   0   0   0  0   0   0   0   0   0   0   0   0   0   0   0   0
   1  8   0   0   0   0   0  16  0   0   0   0   0   0   7   0   0   0   0   0   0
   2  1   0   0   0   0   0   0  0   0   0   0   0   0   0   0   1  30   0   0   0
   3  0   0   0   0   0   0   8  0   8   0   0  16   0   0   0   0   0   0   0   0
   4  0   0   4   0   4   0   0  4   0   0   0   0   8   0   0   0   0   0   0  12
   5  8   0   0   0   0   0  14  0   0   0   0   0   0   0   0   8   0   0   0   0
   6  0   0   0   0   0   0   0  0  18   0   0   0   0   0   0   0   0   0  13   0
   7  0   0   0   0   0   0   0  0   0   0  32   0   0   0   0   0   0   0   0   0
   8  0   0   0   0   8   0   0  0   0   0   0   0   0   0   0   0   0   0   0  24
   9  0   0   0   0  19   1   0  0   0   0   0   0   0   0   0   0   0   0   0  11
  10  0  19   0   0   0   0   0  8   0   0   0   0   0   5   0   0   0   0   0   0
  11  0   0  23   0   6   1   0  0   0   0   0   0   0   0   0   0   0   0   0   0
  12  8   0   0   0   0   0   0  0   2   0   0   0   0   0   0   0   0   0  21   0
  13  0   0   0   0   0   0   0  0   0  31   0   0   0   0   0   0   0   0   0   0
  14  0   0   0   0   0   0   0  0   0   0   0   0  32   0   0   0   0   0   0   0
  15  0   2   2   0   0   0   9  8   0   0   0   0  10   0   0   1   0   0   0   0
  16  0   0   0   0   0  23   0  8   0   0   0   0   0   0   0   0   0   0   0   0
  17  0   7   0   0   0   0   0  7   0   0   0   0  13   1   0   0   0   0   0   0
  18  0   0   0   0   0   0   0  0   0   0   0   0   0   0  12   0   0  20   0   0
  19  0   0   0   0  20   0   0  0   0   0   0   0   0   0   0   0   0   0   0  12




Class: MergeINCREMENT
	RecursiveOPTICS
	MedoidSelector
	FarthestLabelFeedback
	OracleMatching
	Siamese


Siamese Setup:
	Batch Size: 10
	Output Size: 100
	Train Size: 100000

Testing INCREMENT
Subclustering:
Computing Distance
Running OPTICS: minPts = 5

Subcluster Breakdown:
	0: 3.264750 (27)
		0: 3.021354 -- 1.633581  (10)
		1: 3.239862 -- 1.435071  (9)
		2: 3.596992 -- 1.784580  (8)
	--> std: 1.635029 -- 0.143125

	1: 3.074309 (28)
		3: 3.495365 -- 1.385956  (8)
		4: 3.262829 -- 1.333535  (11)
		5: 2.469626 -- 1.210790  (9)
	--> std: 1.378698 -- 0.073407

	2: 2.347099 (29)
		6: 0.302392 -- 0.176827  (4)
		7: 1.987930 -- 0.741469  (14)
		8: 3.547753 -- 1.609183  (11)
	--> std: 1.561307 -- 0.589104

	3: 1.701584 (28)
		9: 2.007442 -- 0.875303  (8)
		10: 0.744793 -- 0.431911  (4)
		11: 1.676806 -- 1.063513  (7)
		12: 1.399588 -- 0.809979  (4)
		13: 2.253931 -- 1.138769  (5)
	--> std: 1.038643 -- 0.247002

	4: 2.327562 (57)
		14: 2.888363 -- 1.541147  (8)
		15: 2.281517 -- 1.005198  (18)
		16: 2.652386 -- 1.354271  (15)
		17: 2.436807 -- 1.218403  (6)
		18: 0.381399 -- 0.224446  (4)
		19: 2.094101 -- 1.081669  (6)
	--> std: 1.327930 -- 0.417154

	5: 1.572097 (25)
		20: 2.174017 -- 2.488390  (5)
		21: 1.790925 -- 1.121673  (7)
		22: 0.443800 -- 0.272355  (4)
		23: 0.826597 -- 0.477236  (4)
		24: 2.162857 -- 2.727588  (5)
	--> std: 1.890830 -- 1.014505

	6: 2.642838 (47)
		25: 3.041867 -- 1.757764  (4)
		26: 1.948646 -- 2.075788  (5)
		27: 2.652560 -- 1.025251  (8)
		28: 2.650872 -- 0.955124  (15)
		29: 2.754609 -- 1.646928  (15)
	--> std: 1.458048 -- 0.433943

	7: 1.974876 (35)
		30: 2.914006 -- 1.554269  (8)
		31: 1.409344 -- 0.840053  (4)
		32: 0.634450 -- 0.405274  (4)
		33: 1.801348 -- 1.123782  (4)
		34: 1.748315 -- 0.763310  (7)
		35: 2.273731 -- 2.046355  (8)
	--> std: 1.532063 -- 0.542086

	8: 2.502140 (28)
		36: 1.929631 -- 1.132227  (4)
		37: 1.567976 -- 0.940349  (4)
		38: 2.737823 -- 1.588088  (4)
		39: 2.247759 -- 0.905311  (9)
		40: 3.555483 -- 1.942160  (7)
	--> std: 1.534206 -- 0.402151

	9: 3.358708 (31)
		41: 3.762938 -- 1.343127  (14)
		42: 3.025813 -- 1.510157  (17)
	--> std: 1.483209 -- 0.083515

	10: 2.037219 (32)
		43: 3.113767 -- 1.504945  (12)
		44: 2.131992 -- 1.231112  (4)
		45: 1.418808 -- 0.823092  (4)
		46: 1.348351 -- 0.829428  (4)
		47: 0.898662 -- 0.533816  (4)
		48: 1.158639 -- 0.672420  (4)
	--> std: 1.450164 -- 0.333178

	11: 1.053292 (16)
		49: 0.828345 -- 0.480226  (4)
		50: 1.241565 -- 0.798644  (8)
		51: 0.901693 -- 0.546512  (4)
	--> std: 0.698111 -- 0.137176

	12: 1.800763 (63)
		52: 0.596589 -- 0.347071  (4)
		53: 0.455264 -- 0.263112  (4)
		54: 1.859888 -- 0.705265  (9)
		55: 1.020653 -- 0.613773  (4)
		56: 1.584221 -- 0.782995  (11)
		57: 1.101362 -- 0.668021  (4)
		58: 1.898599 -- 1.127376  (4)
		59: 2.126089 -- 1.934895  (5)
		60: 1.986823 -- 1.161530  (8)
		61: 3.246774 -- 1.279695  (10)
	--> std: 1.296988 -- 0.472507

	13: 3.170239 (13)
		62: 3.615278 -- 1.808469  (5)
		63: 2.892089 -- 1.506976  (8)
	--> std: 1.667099 -- 0.150746

	14: 2.793572 (12)
		64: 2.793572 -- 1.189473  (12)
	--> std: 1.189473 -- 0.000000

	15: 3.087320 (10)
		65: 3.087320 -- 1.703795  (10)
	--> std: 1.703795 -- 0.000000

	16: 3.141659 (30)
		66: 2.706030 -- 1.211321  (7)
		67: 3.274242 -- 0.997384  (23)
	--> std: 1.078326 -- 0.106969

	17: 3.420022 (20)
		68: 3.420022 -- 1.011910  (20)
	--> std: 1.011910 -- 0.000000

	18: 2.603049 (34)
		69: 3.933711 -- 1.969117  (5)
		70: 1.118947 -- 0.666856  (4)
		71: 1.395805 -- 0.864311  (4)
		72: 2.798862 -- 0.768146  (21)
	--> std: 1.337728 -- 0.525435

	19: 2.036539 (59)
		73: 3.342228 -- 1.526511  (6)
		74: 1.281065 -- 0.543857  (8)
		75: 1.329210 -- 0.537832  (8)
		76: 1.617347 -- 0.973588  (11)
		77: 1.922014 -- 1.120334  (4)
		78: 1.005527 -- 0.584205  (4)
		79: 1.668859 -- 2.066835  (5)
		80: 3.182688 -- 1.746327  (13)
	--> std: 1.536378 -- 0.551246

	Avg: 2.495482 -- 0.658004 
	Std: 1.390497 -- 0.273188 

Subclusters Formed: 81

Selecting Representatives:
Representatives:
[3, 2, 4, 3, 1, 4, 2, 7, 6, 2, 3, 3, 1, 0, 4, 4, 1, 2, 1, 2, 4, 0, 2, 0, 0, 1, 2, 2, 2, 5, 4, 1, 1, 1, 0, 0, 2, 2, 2, 0, 3, 6, 6, 7, 3, 2, 3, 2, 3, 2, 1, 2, 0, 3, 4, 1, 5, 2, 2, 0, 0, 1, 3, 0, 2, 5, 2, 0, 6, 3, 3, 2, 3, 5, 1, 3, 0, 0, 3, 3, 2]


Generating Feedback:
Farthest First
Computing pairwise distances between representatives.
Beginning Queries
Feedback: 1
	{'ch4f': [79]}
Number of Queries: 1

Merging Subclusters:
Generating Data

Train All

Merged Feedback:
	[[79]] 1

Connot Link Subcluster Constraints:
	[set([])] 1

Test All

Creating files for: _deploy
Creating Pairs
Train_data: (5, 1, 64, 64)
Data: (624, 1, 64, 64)
sims: (10,)
Creating files for: _train
Network:
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "data_p"
  top: "sims"
  hdf5_data_param {
    source: "_train.txt"
    batch_size: 10
    shuffle: true
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "gaussian"
      std: 0.1
    }
  }
}
layer {
  name: "r1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "ip1"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_p"
  type: "InnerProduct"
  bottom: "pool2_p"
  top: "ip1_p"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "gaussian"
      std: 0.1
    }
  }
}
layer {
  name: "r1_p"
  type: "ReLU"
  bottom: "ip1_p"
  top: "ip1_p"
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "ip1_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "feat"
  bottom: "feat_p"
  bottom: "sims"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}


Training siamese network
data (624, 1, 64, 64)
targets: (624,)
K: 1
Reclustering

~! 1 !~
Accuracy: 32 of 624: 5.128 %
H: 0.000000 C: 1.000000 V: 0.000000 JCC: 0.048530



~! 2 !~
Accuracy: 64 of 624: 10.256 %
H: 0.082863 C: 0.359865 V: 0.134708 JCC: 0.064078



~! 3 !~
Accuracy: 85 of 624: 13.622 %
H: 0.183766 C: 0.508935 V: 0.270030 JCC: 0.087805



~! 4 !~
Accuracy: 98 of 624: 15.705 %
H: 0.243846 C: 0.555991 V: 0.339009 JCC: 0.103755



~! 5 !~
Accuracy: 139 of 624: 22.276 %
H: 0.300182 C: 0.580343 V: 0.395693 JCC: 0.121363



~! 6 !~
Accuracy: 125 of 624: 20.032 %
H: 0.350232 C: 0.759396 V: 0.479376 JCC: 0.144954



~! 7 !~
Accuracy: 162 of 624: 25.962 %
H: 0.388531 C: 0.679940 V: 0.494497 JCC: 0.159352



~! 8 !~
Accuracy: 208 of 624: 33.333 %
H: 0.458778 C: 0.729785 V: 0.563385 JCC: 0.196934



~! 9 !~
Accuracy: 205 of 624: 32.853 %
H: 0.460481 C: 0.761192 V: 0.573827 JCC: 0.188954



~! 10 !~
Accuracy: 218 of 624: 34.936 %
H: 0.475629 C: 0.678536 V: 0.559246 JCC: 0.190923



~! 11 !~
Accuracy: 226 of 624: 36.218 %
H: 0.515519 C: 0.701345 V: 0.594243 JCC: 0.208353



~! 12 !~
Accuracy: 275 of 624: 44.071 %
H: 0.585966 C: 0.787383 V: 0.671904 JCC: 0.251325



~! 13 !~
Accuracy: 277 of 624: 44.391 %
H: 0.571075 C: 0.779631 V: 0.659252 JCC: 0.253180



~! 14 !~
Accuracy: 277 of 624: 44.391 %
H: 0.573872 C: 0.686358 V: 0.625095 JCC: 0.242586



~! 15 !~
Accuracy: 295 of 624: 47.276 %
H: 0.599397 C: 0.747075 V: 0.665137 JCC: 0.262549



~! 16 !~
Accuracy: 289 of 624: 46.314 %
H: 0.604613 C: 0.725297 V: 0.659479 JCC: 0.251127



~! 17 !~
Accuracy: 326 of 624: 52.244 %
H: 0.662092 C: 0.847853 V: 0.743546 JCC: 0.316408



~! 18 !~
Accuracy: 366 of 624: 58.654 %
H: 0.680292 C: 0.813270 V: 0.740861 JCC: 0.358551



~! 19 !~
Accuracy: 305 of 624: 48.878 %
H: 0.596633 C: 0.704240 V: 0.645986 JCC: 0.240678



~! 20 !~
Accuracy: 346 of 624: 55.449 %
H: 0.671250 C: 0.826161 V: 0.740693 JCC: 0.326276



~! 21 !~
Accuracy: 410 of 624: 65.705 %
H: 0.743555 C: 0.859342 V: 0.797267 JCC: 0.431604



~! 22 !~
Accuracy: 427 of 624: 68.429 %
H: 0.761014 C: 0.843001 V: 0.799912 JCC: 0.435002



~! 23 !~
Accuracy: 439 of 624: 70.353 %
H: 0.768281 C: 0.875277 V: 0.818296 JCC: 0.454740



~! 24 !~
Accuracy: 411 of 624: 65.865 %
H: 0.765413 C: 0.874342 V: 0.816259 JCC: 0.455073



~! 25 !~
Accuracy: 400 of 624: 64.103 %
H: 0.714003 C: 0.772458 V: 0.742081 JCC: 0.371064



~! 26 !~
Accuracy: 425 of 624: 68.109 %
H: 0.788967 C: 0.934873 V: 0.855745 JCC: 0.466381



~! 27 !~
Accuracy: 476 of 624: 76.282 %
H: 0.824326 C: 0.897942 V: 0.859561 JCC: 0.546084



~! 28 !~
Accuracy: 467 of 624: 74.840 %
H: 0.811802 C: 0.871078 V: 0.840396 JCC: 0.521265



~! 29 !~
Accuracy: 450 of 624: 72.115 %
H: 0.802101 C: 0.912848 V: 0.853899 JCC: 0.503330



~! 30 !~
Accuracy: 451 of 624: 72.276 %
H: 0.815806 C: 0.928598 V: 0.868555 JCC: 0.524259



~! 31 !~
Accuracy: 478 of 624: 76.603 %
H: 0.835033 C: 0.908235 V: 0.870097 JCC: 0.565214



~! 32 !~
Accuracy: 503 of 624: 80.609 %
H: 0.842180 C: 0.904454 V: 0.872207 JCC: 0.584133



~! 33 !~
Accuracy: 537 of 624: 86.058 %
H: 0.883709 C: 0.923226 V: 0.903035 JCC: 0.673006



~! 34 !~
Accuracy: 526 of 624: 84.295 %
H: 0.878394 C: 0.932046 V: 0.904425 JCC: 0.632028



~! 35 !~
Accuracy: 504 of 624: 80.769 %
H: 0.843866 C: 0.885449 V: 0.864158 JCC: 0.580441



~! 36 !~
Accuracy: 478 of 624: 76.603 %
H: 0.829910 C: 0.901184 V: 0.864080 JCC: 0.526967



~! 37 !~
Accuracy: 534 of 624: 85.577 %
H: 0.890287 C: 0.932844 V: 0.911069 JCC: 0.683846



~! 38 !~
Accuracy: 531 of 624: 85.096 %
H: 0.886214 C: 0.939394 V: 0.912029 JCC: 0.650578



~! 39 !~
Accuracy: 551 of 624: 88.301 %
H: 0.902083 C: 0.929635 V: 0.915652 JCC: 0.699191



~! 40 !~
Accuracy: 529 of 624: 84.776 %
H: 0.872908 C: 0.921994 V: 0.896780 JCC: 0.631309



~! 41 !~
Accuracy: 548 of 624: 87.821 %
H: 0.911853 C: 0.964897 V: 0.937626 JCC: 0.703475



~! 42 !~
Accuracy: 552 of 624: 88.462 %
H: 0.903344 C: 0.928379 V: 0.915691 JCC: 0.708255



~! 43 !~
Accuracy: 577 of 624: 92.468 %
H: 0.930808 C: 0.950038 V: 0.940325 JCC: 0.799522



~! 44 !~
Accuracy: 559 of 624: 89.583 %
H: 0.911382 C: 0.929270 V: 0.920239 JCC: 0.737447



~! 45 !~
Accuracy: 576 of 624: 92.308 %
H: 0.926959 C: 0.946223 V: 0.936492 JCC: 0.791061



~! 46 !~
Accuracy: 576 of 624: 92.308 %
H: 0.926325 C: 0.944983 V: 0.935561 JCC: 0.790274



~! 47 !~
Accuracy: 559 of 624: 89.583 %
H: 0.917313 C: 0.939540 V: 0.928293 JCC: 0.744744



~! 48 !~
Accuracy: 589 of 624: 94.391 %
H: 0.938920 C: 0.944602 V: 0.941753 JCC: 0.819822



~! 49 !~
Accuracy: 571 of 624: 91.506 %
H: 0.929760 C: 0.953359 V: 0.941412 JCC: 0.792270



~! 50 !~
Accuracy: 574 of 624: 91.987 %
H: 0.938446 C: 0.962123 V: 0.950137 JCC: 0.810094



~! 51 !~
Accuracy: 593 of 624: 95.032 %
H: 0.945664 C: 0.949700 V: 0.947678 JCC: 0.836185



~! 52 !~
Accuracy: 576 of 624: 92.308 %
H: 0.916768 C: 0.924905 V: 0.920818 JCC: 0.745322



~! 53 !~
Accuracy: 593 of 624: 95.032 %
H: 0.945697 C: 0.949702 V: 0.947695 JCC: 0.836346



~! 54 !~
Accuracy: 582 of 624: 93.269 %
H: 0.926070 C: 0.932136 V: 0.929093 JCC: 0.773347



~! 55 !~
Accuracy: 585 of 624: 93.750 %
H: 0.932229 C: 0.937107 V: 0.934662 JCC: 0.793597



~! 56 !~
Accuracy: 573 of 624: 91.827 %
H: 0.917612 C: 0.929108 V: 0.923324 JCC: 0.752020



~! 57 !~
Accuracy: 572 of 624: 91.667 %
H: 0.914664 C: 0.926210 V: 0.920401 JCC: 0.746287



~! 58 !~
Accuracy: 599 of 624: 95.994 %
H: 0.947969 C: 0.949377 V: 0.948673 JCC: 0.856107



~! 59 !~
Accuracy: 594 of 624: 95.192 %
H: 0.941477 C: 0.943523 V: 0.942499 JCC: 0.833156



~! 60 !~
Accuracy: 572 of 624: 91.667 %
H: 0.914664 C: 0.926210 V: 0.920401 JCC: 0.746287



~! 61 !~
Accuracy: 576 of 624: 92.308 %
H: 0.917961 C: 0.925780 V: 0.921854 JCC: 0.758646



~! 62 !~
Accuracy: 572 of 624: 91.667 %
H: 0.916051 C: 0.927505 V: 0.921742 JCC: 0.747984



~! 63 !~
Accuracy: 572 of 624: 91.667 %
H: 0.914978 C: 0.926466 V: 0.920686 JCC: 0.747470



~! 64 !~
Accuracy: 572 of 624: 91.667 %
H: 0.916051 C: 0.927505 V: 0.921742 JCC: 0.747984



~! 65 !~
Accuracy: 572 of 624: 91.667 %
H: 0.919086 C: 0.931304 V: 0.925155 JCC: 0.753945



~! 66 !~
Accuracy: 572 of 624: 91.667 %
H: 0.914891 C: 0.926460 V: 0.920639 JCC: 0.747136



~! 67 !~
Accuracy: 572 of 624: 91.667 %
H: 0.918281 C: 0.930135 V: 0.924170 JCC: 0.751524



~! 68 !~
Accuracy: 572 of 624: 91.667 %
H: 0.916051 C: 0.927505 V: 0.921742 JCC: 0.747984



~! 69 !~
Accuracy: 572 of 624: 91.667 %
H: 0.915331 C: 0.926492 V: 0.920878 JCC: 0.748677



~! 70 !~
Accuracy: 572 of 624: 91.667 %
H: 0.914664 C: 0.926210 V: 0.920401 JCC: 0.746287



~! 71 !~
Accuracy: 578 of 624: 92.628 %
H: 0.922622 C: 0.929669 V: 0.926132 JCC: 0.767201



~! 72 !~
Accuracy: 578 of 624: 92.628 %
H: 0.921549 C: 0.928636 V: 0.925079 JCC: 0.766667



~! 73 !~
Accuracy: 578 of 624: 92.628 %
H: 0.921549 C: 0.928636 V: 0.925079 JCC: 0.766667



~! 74 !~
Accuracy: 579 of 624: 92.788 %
H: 0.923417 C: 0.930254 V: 0.926823 JCC: 0.772109



~! 75 !~
Accuracy: 579 of 624: 92.788 %
H: 0.923237 C: 0.930241 V: 0.926726 JCC: 0.771471



~! 76 !~
Accuracy: 578 of 624: 92.628 %
H: 0.922622 C: 0.929669 V: 0.926132 JCC: 0.767201



~! 77 !~
Accuracy: 579 of 624: 92.788 %
H: 0.923237 C: 0.930241 V: 0.926726 JCC: 0.771471



~! 78 !~
Accuracy: 579 of 624: 92.788 %
H: 0.924627 C: 0.931807 V: 0.928203 JCC: 0.770035



~! 79 !~
Accuracy: 579 of 624: 92.788 %
H: 0.923237 C: 0.930241 V: 0.926726 JCC: 0.771471



~! 80 !~
Accuracy: 579 of 624: 92.788 %
H: 0.923237 C: 0.930241 V: 0.926726 JCC: 0.771471


INCREMENT: (80)
SubClusters: 81
Accuracy: 583 of 624: 93.429 %
H: 0.951069 C: 0.670161 V: 0.786279 JCC: 0.262915


Final
Accuracy: 579 of 624: 92.788 %
H: 0.923237 C: 0.930241 V: 0.926726 JCC: 0.771471

Rows are labels, Columns are Clusters

       0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
   0   1   0   0   0   0   0   0   0   0   0   0   0  29   0   0   0   0   0   0   0
   1   1   0   0   0   0   0   0  29   0   0   0   0   0   0   0   1   0   0   0   0
   2   1   0   0   0   0   0   0   1   0   0   0  30   0   0   0   0   0   0   0   0
   3   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  32   0   0
   4   0   0  32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
   5  30   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
   6   0   0   0   0  31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
   7   0   0   0   0   0  32   0   0   0   0   0   0   0   0   0   0   0   0   0   0
   8   0   0   0   0   0   0  32   0   0   0   0   0   0   0   0   0   0   0   0   0
   9   0  23   7   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  10   0   0   0   0   0   0   0   0   0   0  32   0   0   0   0   0   0   0   0   0
  11   0   0   0   1   0   0   0   0   0   0   0   0   0  29   0   0   0   0   0   0
  12   0   2   3   0   0   0  13   0   0   0   0   0   0   0   0   0   0   0   0  14
  13   0   0   0   0   0   0   0   0   0   0   0   0   0   0  31   0   0   0   0   0
  14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  32   0   0   0
  15   1   0   4   0   0   0   0   0   0   2   0   0   0   2   0   0   0   1  22   0
  16   0   0   0  31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  17   0   0   0   0   0   0   0   1   0  27   0   0   0   0   0   0   0   0   0   0
  18   0   0   0   0   0   0   0   0  32   0   0   0   0   0   0   0   0   0   0   0
  19   0   0   0   0   2   0   0   0   0   0   0   0   0   0   0  29   0   0   0   0



Total Time: 2 d 36 m 30.306133 s




Solver:
net: "_TRAIN_NET.prototxt"
base_lr: 0.1
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.1
max_iter: 10000
display: 1000
weight_decay: 0.000000
solver_mode: GPU
